# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-11 06:25
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cabinet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='机柜编号')),
            ],
            options={
                'verbose_name_plural': '机柜',
                'verbose_name': '机柜',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('host_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='主机DNS名称')),
                ('kernel', models.CharField(blank=True, max_length=255, null=True, verbose_name='系统内核')),
                ('kernel_release', models.CharField(blank=True, max_length=255, null=True, verbose_name='系统内核版本')),
                ('virtual', models.CharField(blank=True, max_length=255, null=True, verbose_name='设备类型')),
                ('host', models.CharField(blank=True, max_length=255, null=True, verbose_name='主机名')),
                ('osrelease', models.CharField(blank=True, max_length=255, null=True, verbose_name='操作系统版本')),
                ('saltversion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Salt版本')),
                ('osfinger', models.CharField(blank=True, max_length=255, null=True, verbose_name='系统指纹')),
                ('os_family', models.CharField(blank=True, max_length=255, null=True, verbose_name='系统类型')),
                ('num_gpus', models.IntegerField(blank=True, null=True, verbose_name='GPU数量')),
                ('system_serialnumber', models.CharField(blank=True, max_length=255, null=True, verbose_name='SN号')),
                ('cpu_model', models.CharField(blank=True, max_length=255, null=True, verbose_name='CPU型号')),
                ('productname', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品名称')),
                ('osarch', models.CharField(blank=True, max_length=255, null=True, verbose_name='系统架构')),
                ('cpuarch', models.CharField(blank=True, max_length=255, null=True, verbose_name='CPU架构')),
                ('os', models.CharField(blank=True, max_length=255, null=True, verbose_name='操作系统')),
                ('mem_total', models.IntegerField(blank=True, null=True, verbose_name='内存大小')),
                ('num_cpus', models.IntegerField(blank=True, null=True, verbose_name='CPU数量')),
                ('minion_status', models.IntegerField(choices=[(0, '未启动'), (1, '运行中'), (2, '待接受'), (3, '已拒绝'), (4, '已禁止')], default=0, verbose_name='Minion状态')),
                ('enable_ssh', models.BooleanField(choices=[(True, '启用'), (False, '禁用')], default=False, verbose_name='使用Salt-SSH')),
                ('ssh_username', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='SSH用户名')),
                ('ssh_password', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='SSH密码')),
                ('enable_sudo', models.BooleanField(choices=[(True, '启用'), (False, '禁用')], default=False, verbose_name='启用Sudo')),
            ],
            options={
                'verbose_name_plural': '主机',
                'verbose_name': '主机',
            },
        ),
        migrations.CreateModel(
            name='HostIP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(blank=True, max_length=255, null=True, verbose_name='IP地址')),
                ('ip_type', models.IntegerField(blank=True, choices=[(100, '----'), (0, '内网'), (1, '外网'), (2, '管理网')], default=100, verbose_name='IP类型')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('host', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='cmdb.Host', verbose_name='主机')),
            ],
            options={
                'verbose_name_plural': '主机IP',
                'verbose_name': '主机IP',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='机房名称')),
                ('bandwidth', models.CharField(blank=True, max_length=255, null=True, verbose_name='机房带宽')),
                ('phone', models.CharField(max_length=255, verbose_name='联系电话')),
                ('linkman', models.CharField(max_length=255, null=True, verbose_name='联系人')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='机房地址')),
                ('concat_email', models.EmailField(blank=True, default='', max_length=254, null=True, verbose_name='联系邮箱')),
                ('network', models.TextField(blank=True, null=True, verbose_name='IP地址段')),
                ('create_time', models.DateField(auto_now=True, verbose_name='创建时间')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': '机房',
                'verbose_name': '机房',
            },
        ),
        migrations.CreateModel(
            name='IDCLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('comment', models.TextField(verbose_name='描述')),
            ],
            options={
                'verbose_name_plural': '机房等级',
                'verbose_name': '机房等级',
            },
        ),
        migrations.CreateModel(
            name='ISP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
            ],
            options={
                'verbose_name_plural': 'ISP类型',
                'verbose_name': 'ISP类型',
            },
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=30, verbose_name='机架名称')),
                ('cabinet', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='idc', chained_model_field='idc', null=True, on_delete=django.db.models.deletion.CASCADE, to='cmdb.Cabinet', verbose_name='机柜')),
                ('idc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmdb.IDC', verbose_name='IDC')),
            ],
            options={
                'verbose_name_plural': '机架',
                'verbose_name': '机架',
            },
        ),
        migrations.AddField(
            model_name='idc',
            name='operator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.ISP', verbose_name='ISP类型'),
        ),
        migrations.AddField(
            model_name='idc',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.IDCLevel', verbose_name='机房类型'),
        ),
        migrations.AddField(
            model_name='host',
            name='rack',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmdb.Rack', verbose_name='机架'),
        ),
        migrations.AddField(
            model_name='cabinet',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.IDC', verbose_name='机房'),
        ),
        migrations.AlterUniqueTogether(
            name='rack',
            unique_together=set([('idc', 'cabinet', 'name')]),
        ),
    ]
